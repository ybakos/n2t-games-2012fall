function Entry.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
call Vector.new 0
pop this 1
push pointer 0
return
function Entry.add 0
push argument 0
pop pointer 0
push this 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push argument 1
call Vector.add 2
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 1
pop this 0
label IF_END0
push constant 0
return
function Entry.retrieve 2
push argument 0
pop pointer 0
push this 0
push argument 1
call Pair.equals 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Pair.second 1
return
label IF_FALSE0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
call Vector.size 1
lt
not
if-goto WHILE_END0
push this 1
push local 1
call Vector.at 2
pop local 0
push local 0
push argument 1
call Pair.equals 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Pair.second 1
return
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 1
neg
return
function Entry.dispose 0
push argument 0
pop pointer 0
push this 1
call Vector.dispose 1
pop temp 0
push this 0
call Pair.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
